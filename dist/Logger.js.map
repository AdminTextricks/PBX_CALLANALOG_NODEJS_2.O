{"version":3,"file":"Logger.js","names":["winston","require","logger","createLogger","level","format","combine","timestamp","json","transports","File","filename","process","env","NODE_ENV","add","Console","simple","module","exports"],"sources":["../src/Logger.js"],"sourcesContent":["// logger.js\r\nconst winston = require('winston');\r\n\r\n// Create a logger instance\r\nconst logger = winston.createLogger({\r\n  level: 'info', // Log levels (info, warn, error, etc.)\r\n  format: winston.format.combine(\r\n    winston.format.timestamp(),\r\n    winston.format.json() // Log in JSON format\r\n  ),\r\n  transports: [\r\n    new winston.transports.File({ filename: 'error.log', level: 'error' }), // Error logs\r\n    new winston.transports.File({ filename: 'combined.log' }) // All logs\r\n  ]\r\n});\r\n\r\n// If we're in development, log to the console as well\r\nif (process.env.NODE_ENV !== 'production') {\r\n  logger.add(new winston.transports.Console({\r\n    format: winston.format.simple() // Log simple format to console\r\n  }));\r\n}\r\n\r\nmodule.exports = logger;\r\n"],"mappings":"AAAA;AACA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;;AAElC;AACA,MAAMC,MAAM,GAAGF,OAAO,CAACG,YAAY,CAAC;EAClCC,KAAK,EAAE,MAAM;EAAE;EACfC,MAAM,EAAEL,OAAO,CAACK,MAAM,CAACC,OAAO,CAC5BN,OAAO,CAACK,MAAM,CAACE,SAAS,CAAC,CAAC,EAC1BP,OAAO,CAACK,MAAM,CAACG,IAAI,CAAC,CAAC,CAAC;EACxB,CAAC;EACDC,UAAU,EAAE,CACV,IAAIT,OAAO,CAACS,UAAU,CAACC,IAAI,CAAC;IAAEC,QAAQ,EAAE,WAAW;IAAEP,KAAK,EAAE;EAAQ,CAAC,CAAC;EAAE;EACxE,IAAIJ,OAAO,CAACS,UAAU,CAACC,IAAI,CAAC;IAAEC,QAAQ,EAAE;EAAe,CAAC,CAAC,CAAC;EAAA;AAE9D,CAAC,CAAC;;AAEF;AACA,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;EACzCZ,MAAM,CAACa,GAAG,CAAC,IAAIf,OAAO,CAACS,UAAU,CAACO,OAAO,CAAC;IACxCX,MAAM,EAAEL,OAAO,CAACK,MAAM,CAACY,MAAM,CAAC,CAAC,CAAC;EAClC,CAAC,CAAC,CAAC;AACL;AAEAC,MAAM,CAACC,OAAO,GAAGjB,MAAM","ignoreList":[]}