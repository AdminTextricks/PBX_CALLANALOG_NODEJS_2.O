{"version":3,"file":"db.js","names":["mysql","require","dotenv","config","env","process","NODE_ENV","development","host","DEV_DB_HOST","port","DEV_DB_PORT","user","DEV_DB_USER","password","DEV_DB_PASSWORD","database","DEV_DB_NAME","timezone","production","PROD_DB_HOST","PROD_DB_PORT","PROD_DB_USER","PROD_DB_PASSWORD","PROD_DB_NAME","local","LOCAL_DB_HOST","LOCAL_DB_USER","LOCAL_DB_PASSWORD","LOCAL_DB_NAME","dbConfig","db","createPool","on","err","console","error","module","exports"],"sources":["../src/db.js"],"sourcesContent":["const mysql = require(\"mysql2\");\r\nconst dotenv = require(\"dotenv\");\r\n\r\ndotenv.config();\r\n\r\nconst env = process.env.NODE_ENV || \"production\";\r\n\r\nconst config = {\r\n  development: {\r\n    host: process.env.DEV_DB_HOST,\r\n    port: process.env.DEV_DB_PORT,\r\n    user: process.env.DEV_DB_USER,\r\n    password: process.env.DEV_DB_PASSWORD,\r\n    database: process.env.DEV_DB_NAME,\r\n    timezone: \"Z\",\r\n  },\r\n  production: {\r\n    host: process.env.PROD_DB_HOST,\r\n    port: process.env.PROD_DB_PORT,\r\n    user: process.env.PROD_DB_USER,\r\n    password: process.env.PROD_DB_PASSWORD,\r\n    database: process.env.PROD_DB_NAME,\r\n    timezone: \"Z\",\r\n  },\r\n  local: {\r\n    host: process.env.LOCAL_DB_HOST,\r\n    user: process.env.LOCAL_DB_USER,\r\n    password: process.env.LOCAL_DB_PASSWORD,\r\n    database: process.env.LOCAL_DB_NAME,\r\n  },\r\n};\r\n\r\n// Select the configuration based on the current environment\r\nconst dbConfig = config[env];\r\n\r\n// let db;\r\n\r\n// function handleDisconnect() {\r\n//   db = mysql.createConnection(dbConfig);\r\n\r\n//   db.connect((err) => {\r\n//     if (err) {\r\n//       console.error(\"Error connecting to database:\", err);\r\n//       setTimeout(handleDisconnect, 2000); // Retry connection after 2 seconds\r\n//     } else {\r\n//       console.log(\"Connected to database!\");\r\n//     }\r\n//   });\r\n\r\n//   db.on('error', (err) => {\r\n//     console.error(\"Database error:\", err);\r\n//     if (err.code === 'PROTOCOL_CONNECTION_LOST') {\r\n//       handleDisconnect(); // Reconnect on connection lost\r\n//     } else {\r\n//       throw err;\r\n//     }\r\n//   });\r\n// }\r\n\r\n// handleDisconnect();\r\n\r\nconst db = mysql.createPool(dbConfig);\r\n\r\n// Error handling for the pool\r\ndb.on(\"error\", (err) => {\r\n  console.error(\"Database error:\", err);\r\n});\r\n\r\nmodule.exports = db;\r\n"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAC/B,MAAMC,MAAM,GAAGD,OAAO,CAAC,QAAQ,CAAC;AAEhCC,MAAM,CAACC,MAAM,CAAC,CAAC;AAEf,MAAMC,GAAG,GAAGC,OAAO,CAACD,GAAG,CAACE,QAAQ,IAAI,YAAY;AAEhD,MAAMH,MAAM,GAAG;EACbI,WAAW,EAAE;IACXC,IAAI,EAAEH,OAAO,CAACD,GAAG,CAACK,WAAW;IAC7BC,IAAI,EAAEL,OAAO,CAACD,GAAG,CAACO,WAAW;IAC7BC,IAAI,EAAEP,OAAO,CAACD,GAAG,CAACS,WAAW;IAC7BC,QAAQ,EAAET,OAAO,CAACD,GAAG,CAACW,eAAe;IACrCC,QAAQ,EAAEX,OAAO,CAACD,GAAG,CAACa,WAAW;IACjCC,QAAQ,EAAE;EACZ,CAAC;EACDC,UAAU,EAAE;IACVX,IAAI,EAAEH,OAAO,CAACD,GAAG,CAACgB,YAAY;IAC9BV,IAAI,EAAEL,OAAO,CAACD,GAAG,CAACiB,YAAY;IAC9BT,IAAI,EAAEP,OAAO,CAACD,GAAG,CAACkB,YAAY;IAC9BR,QAAQ,EAAET,OAAO,CAACD,GAAG,CAACmB,gBAAgB;IACtCP,QAAQ,EAAEX,OAAO,CAACD,GAAG,CAACoB,YAAY;IAClCN,QAAQ,EAAE;EACZ,CAAC;EACDO,KAAK,EAAE;IACLjB,IAAI,EAAEH,OAAO,CAACD,GAAG,CAACsB,aAAa;IAC/Bd,IAAI,EAAEP,OAAO,CAACD,GAAG,CAACuB,aAAa;IAC/Bb,QAAQ,EAAET,OAAO,CAACD,GAAG,CAACwB,iBAAiB;IACvCZ,QAAQ,EAAEX,OAAO,CAACD,GAAG,CAACyB;EACxB;AACF,CAAC;;AAED;AACA,MAAMC,QAAQ,GAAG3B,MAAM,CAACC,GAAG,CAAC;;AAE5B;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAM2B,EAAE,GAAG/B,KAAK,CAACgC,UAAU,CAACF,QAAQ,CAAC;;AAErC;AACAC,EAAE,CAACE,EAAE,CAAC,OAAO,EAAGC,GAAG,IAAK;EACtBC,OAAO,CAACC,KAAK,CAAC,iBAAiB,EAAEF,GAAG,CAAC;AACvC,CAAC,CAAC;AAEFG,MAAM,CAACC,OAAO,GAAGP,EAAE","ignoreList":[]}